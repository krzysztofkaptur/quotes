// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: quotes.sql

package database

import (
	"context"
)

const fetchQuotes = `-- name: FetchQuotes :many
select id, text, author_id from quotes
`

func (q *Queries) FetchQuotes(ctx context.Context) ([]Quote, error) {
	rows, err := q.db.QueryContext(ctx, fetchQuotes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Quote
	for rows.Next() {
		var i Quote
		if err := rows.Scan(&i.ID, &i.Text, &i.AuthorID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
